{"version":3,"sources":["DIGITS.js","addDigits.js","getDigits.js","joinDigits.js","multiplyDigits.js","convert.js","Field.react.js","DynamicField.react.js","Label.react.js","Size.react.js","App.js","index.js"],"names":["DIGITS","addDigits","aDigits","bDigits","base","result","carry","aLength","length","bLength","i","max","Math","sum","push","DIGITS_MAP","getDigits","number","replace","stripPrefix","trim","split","reverse","map","digit","position","NaN","parseInt","parse","isNaN","Error","joinDigits","digits","toString","encode","join","multiplyDigits","multiplicand","multiplier","count","memo","memoIndex","previous","forEach","convert","inBase","outBase","powers","outer","nested","getPowers","power","PropTypes","shape","value","string","fromValue","getValidator","regexp","RegExp","slice","test","Field","props","_onBlur","event","_isActive","_onFocus","_onChange","currentTarget","_validate","selectionEnd","selectionStart","setState","onValueChange","_selectionEnd","_selectionStart","_onSelect","_onCopy","_input","select","copySucceeded","document","execCommand","setTimeout","error","state","isActive","prevProps","prevState","this","setSelectionRange","nextProps","className","onClick","title","classNames","cx","focus","autoCapitalize","autoComplete","onBlur","onFocus","onChange","onSelect","ref","spellCheck","type","_copyStatus","_copyLink","React","Component","defaultProps","DynamicField","target","initialBase","options","_renderOptions","Label","text","children","App","bits","bytes","SERIALIZATION_BASE","replaceHistoryState","debounce","window","history","replaceState","getInitialValue","location","hash","_onValueChange","_firstInput","href","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.eab1f8c7.chunk.js","sourcesContent":["/**\n * Copyright 2003-present Greg Hurrell. All rights reserved.\n * Licensed under the terms of the MIT license.\n *\n * @flow\n */\n\nconst DIGITS = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nexport default DIGITS;\n","/**\n * Copyright 2003-present Greg Hurrell. All rights reserved.\n * Licensed under the terms of the MIT license.\n *\n * @flow\n */\n\n/**\n * Adds two arrays of decimal digits, `aDigits` and `bDigits`, returning a new\n * array of decimal digits in base `base`.\n */\nexport default function addDigits(\n  aDigits: Array<number>,\n  bDigits: Array<number>,\n  base: number\n): Array<number> {\n  let result = [];\n  let carry = 0;\n  let aLength = aDigits.length;\n  let bLength = bDigits.length;\n  for (\n    let i = 0, max = Math.max(aLength, bLength);\n    carry || i < max;\n    i++\n  ) {\n    const aDigit = i < aLength ? aDigits[i] : 0;\n    const bDigit = i < bLength ? bDigits[i] : 0;\n    const sum = aDigit + bDigit + carry;\n    result.push(sum % base);\n\n    // ~~ here is the equivalent of Math.floor; used to avoid V8 de-opt,\n    // \"Reference to a variable which requires dynamic lookup\".\n    carry = ~~(sum / base);\n  }\n  return result.length ? result : [0];\n}\n","/**\n * Copyright 2003-present Greg Hurrell. All rights reserved.\n * Licensed under the terms of the MIT license.\n *\n * @flow\n */\n\nimport DIGITS from './DIGITS';\n\nconst DIGITS_MAP = {};\nDIGITS.split('').forEach((digit, i) => {\n  DIGITS_MAP[digit] = i;\n});\n\n/**\n * Strips the leading prefix from `number` in `base` and returns the remaining\n * part of the string.\n *\n * - \"0x\" (or \"0X\") for hexadecimal numbers.\n *\n * For all bases, leading whitespace and zeroes are stripped.\n */\nfunction stripPrefix(number: string, base: number): string {\n  if (base === 16) {\n    return number.replace(/^\\s*(?:0x)?0*/i, '');\n  } else if (base === 8) {\n    return number.replace(/^\\s*0*/, '');\n  } else {\n    return number.replace(/^\\s*0*/, '');\n  }\n}\n\nfunction parse(digit: string, base: number) {\n  if (base > 36 && base <= 62) {\n    // This branch only called for serialization to/from the URL.\n    const position = DIGITS_MAP[digit];\n    return position !== -1 && position < base ? position + 1 : NaN;\n  } else {\n    return parseInt(digit, base);\n  }\n}\n\n/**\n * Breaks the string representation of `number` in `base` into an array\n * of decimal digits (from least significant to most significant) for\n * easier manipulation.\n *\n * For example, the hexadecimal representation `\"40fa\"` becomes `[10, 15, 0,\n * 4]`.\n */\nexport default function getDigits(number: string, base: number): Array<number> {\n  return stripPrefix(number, base).trim().split('').reverse().map(digit => {\n    const result = parse(digit, base);\n    if (isNaN(result)) {\n      throw new Error('Invalid digit `' + digit + '` for base `' + base + '`');\n    }\n    return result;\n  });\n}\n","/**\n * Copyright 2003-present Greg Hurrell. All rights reserved.\n * Licensed under the terms of the MIT license.\n *\n * @flow\n */\n\nimport DIGITS from './DIGITS';\n\nfunction encode(number: number, base: number) {\n  if (base > 36 && base <= 62) {\n    // This branch really only ever called for serializing to the URL.\n    return DIGITS[number - 1];\n  } else {\n    return number.toString(base);\n  }\n}\n\n/**\n * Turns an unpacked arbitrary-precision representation of a number, `digits`,\n * (as produced by `getDigits`) back into a string representation in `base`.\n */\nexport default function joinDigits(\n  digits: Array<number>,\n  base: number\n): string {\n  return digits\n    .map(number => encode(number, base))\n    .reverse()\n    .join('');\n}\n","/**\n * Copyright 2003-present Greg Hurrell. All rights reserved.\n * Licensed under the terms of the MIT license.\n *\n * @flow\n */\n\nimport addDigits from './addDigits';\n\n/**\n * Multiply an array of decimal digits, `multiplicand`, by `number`, returning\n * the result as an array of decimal digits in base `base`.\n *\n * Note that multiplication is implemented as repeated addition.\n */\nexport default function multiplyDigits(\n  multiplicand: Array<number>,\n  multiplier: number,\n  base: number\n): Array<number> {\n  // Partial result being built up.\n  let result = [0];\n\n  // Running total of additions performed so far.\n  let count = 0;\n\n  // We memoize partial subresults in a faux-stack so they can be re-used.\n  // (Faux because we never actually pop, as an optimization.)\n  const memo = [];\n  let memoIndex = -1;\n\n  while (multiplier) {\n    if (count && count * 2 <= multiplier) {\n      // We can double the current result without exceeding the target.\n      result = addDigits(result, result, base);\n      multiplier -= count;\n      count *= 2;\n      memo.push({count, result});\n      memoIndex++;\n    } else if (memoIndex >= 0) {\n      // We can use a previous result from the stack to leap ahead.\n      while (true) {\n        const previous = memo[memoIndex--];\n        if (previous.count <= multiplier) {\n          result = addDigits(result, previous.result, base);\n          multiplier -= previous.count;\n          count += previous.count;\n          break;\n        }\n      }\n    } else {\n      // Stack is empty, so fall back to base case (single addition).\n      result = addDigits(result, multiplicand, base);\n      multiplier--;\n      count++;\n      memo.push({count, result});\n      memoIndex++;\n    }\n  }\n\n  return result;\n}\n","/**\n * Copyright 2003-present Greg Hurrell. All rights reserved.\n * Licensed under the terms of the MIT license.\n *\n * @flow\n */\n\nimport addDigits from './addDigits';\nimport getDigits from './getDigits';\nimport joinDigits from './joinDigits';\nimport multiplyDigits from './multiplyDigits';\n\n/**\n * Memoization for reusable part of computation. The `power` value in\n * the core loop of `convert()` varies only by `inBase`/`outBase`,\n * independently of the `number` to be converted, so we keep it around\n * and re-use it to avoid repeated calls to `multiplyDigits()`.\n */\nconst memo = [];\n\nfunction getPowers(inBase: number, outBase: number): Array<Array<number>> {\n  let outer = memo[inBase];\n  if (!outer) {\n    outer = memo[inBase] = [];\n  }\n  let nested = outer[outBase];\n  if (!nested) {\n    nested = outer[outBase] = [[1]];\n  }\n  return nested;\n}\n\n/**\n * Convert `number` in base `inBase`, to base `outBase`. Both the input `number`\n * and return value are string representations.\n */\nexport default function convert(\n  number: string,\n  inBase: number,\n  outBase: number\n): string {\n  if (inBase === outBase) {\n    return number;\n  }\n  const digits = getDigits(number, inBase);\n  const powers = getPowers(inBase, outBase);\n  let result = [0];\n  for (let i = 0; i < digits.length; i++) {\n    const power = powers[i];\n    if (digits[i]) {\n      result = addDigits(\n        result,\n        multiplyDigits(power, digits[i], outBase),\n        outBase\n      );\n    }\n\n    if (powers.length < i + 2) {\n      powers[i + 1] = multiplyDigits(power, inBase, outBase);\n    }\n  }\n  return joinDigits(result, outBase);\n}\n","/**\n * Copyright 2003-present Greg Hurrell. All rights reserved.\n * Licensed under the terms of the MIT license.\n *\n * @flow\n */\n\nimport DIGITS from './DIGITS';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport convert from './convert';\nimport cx from 'classnames';\n\nexport type Value = {\n  base: number;\n  value: string;\n};\nexport const ValuePropType = PropTypes.shape({\n  base: PropTypes.number,\n  value: PropTypes.string,\n});\n\n/**\n * Convert from `value` to `base`.\n */\nfunction fromValue(value: ?Value, base: number): string {\n  if (value === null) {\n    return '';\n  } else if (value.base === base) {\n    return value.value;\n  }\n  return convert(value.value, value.base, base);\n}\n\nfunction getValidator(base) {\n  const prefix = base === 16 ? '(?:0x)?' : '';\n  const regexp = new RegExp(\n    `^\\\\s*${prefix}[${DIGITS.slice(0, base)}]*\\\\s*$`,\n    'i'\n  );\n  return value => regexp.test(value);\n}\n\nexport default class Field extends React.Component {\n  static propTypes = {\n    base: PropTypes.number,\n    onValueChange: PropTypes.func.isRequired,\n    value: ValuePropType,\n  };\n  static defaultProps = {\n    base: 10,\n  };\n\n  constructor(props) {\n    super(props);\n    if (props.base < 2 || props.base > DIGITS.length) {\n      throw new Error(\n        `base prop must be between 2..${DIGITS.length}`\n      );\n    }\n    this._validate = getValidator(props.base);\n    const value = fromValue(props.value, props.base);\n    this.state = {\n      copySucceeded: false,\n      isActive: false,\n      selectionEnd: value.length,\n      selectionStart: value.length,\n      value,\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this._isActive) {\n      const {selectionStart, selectionEnd} = this.state;\n      this._input.setSelectionRange(selectionStart, selectionEnd);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.base !== this.props.base) {\n      this._validate = getValidator(nextProps.base);\n    }\n    this.setState({value: fromValue(nextProps.value, nextProps.base)});\n  }\n\n  _onBlur = event => {\n    this._isActive = false;\n  }\n\n  _onFocus = event => {\n    this._isActive = true;\n  }\n\n  _onChange = event => {\n    const value = event.currentTarget.value;\n    if (this._validate(value)) {\n      const {selectionEnd, selectionStart} = event.currentTarget;\n      this.setState({selectionEnd, selectionStart});\n      this.props.onValueChange({\n        base: this.props.base,\n        value,\n      });\n    } else {\n      this.setState({\n        selectionEnd: this._selectionEnd,\n        selectionStart: this._selectionStart,\n      });\n    }\n  }\n\n  _onSelect = event => {\n    // Remember selection to stop React moving cursor to end:\n    // https://github.com/facebook/react/issues/955\n    const {selectionEnd, selectionStart} = event.currentTarget;\n    this._selectionStart = selectionStart;\n    this._selectionEnd = selectionEnd;\n  }\n\n  _onCopy = () => {\n    this._input.select();\n\n    // May throw a SecurityError.\n    try {\n      this.setState({\n        copySucceeded: document.execCommand('copy'),\n      });\n      setTimeout(() => this.setState({copySucceeded: false}), 750);\n    } catch(error) {\n      this.setState({copySucceeded: false});\n    }\n  }\n\n  _copyLink() {\n    // Would check `document.queryCommandSupported('copy')` here, but that\n    // doesn't work; see:\n    // - https://code.google.com/p/chromium/issues/detail?id=476508\n    // - https://github.com/w3c/clipboard-apis/issues/4\n    return (\n      <span\n        className=\"hextrapolate-copy\"\n        onClick={this._onCopy}\n        title=\"Copy to Clipboard\">\n        copy\n      </span>\n    );\n  }\n\n  _copyStatus() {\n    const classNames = cx({\n      'hextrapolate-copy-status': true,\n      'hextrapolate-copy-success': this.state.copySucceeded,\n    });\n    return <span className={classNames}>&#x2713;</span>;\n  }\n\n  focus() {\n    this._input.focus();\n  }\n\n  render() {\n    return (\n      <span className=\"hextrapolate-field\">\n        <input\n          autoCapitalize=\"none\"\n          autoComplete=\"off\"\n          onBlur={this._onBlur}\n          onFocus={this._onFocus}\n          onChange={this._onChange}\n          onSelect={this._onSelect}\n          ref={ref => this._input = ref}\n          spellCheck=\"false\"\n          type=\"text\"\n          value={this.state.value}\n        />\n        {this._copyStatus()}\n        {this._copyLink()}\n      </span>\n    );\n  }\n}\n","/**\n * Copyright 2003-present Greg Hurrell. All rights reserved.\n * Licensed under the terms of the MIT license.\n *\n * @flow\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  default as Field,\n  ValuePropType,\n} from './Field.react';\n\nexport default class DynamicField extends React.Component {\n  static propTypes = {\n    initialBase: PropTypes.number,\n    onValueChange: PropTypes.func.isRequired,\n    value: ValuePropType,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {base: props.initialBase};\n  }\n\n  _onChange = event => {\n    const base = parseInt(event.target.value, 10);\n    this.setState({base});\n  }\n\n  _renderOptions() {\n    const options = [];\n    for (let i = 2; i <= 36; i++) {\n      options.push(\n        <option key={i} value={i}>Base {i}</option>\n      );\n    }\n    return options;\n  }\n\n  render() {\n    return (\n      <div className=\"hextrapolate-row\">\n        <span className=\"hextrapolate-base\">\n          <select\n            onChange={this._onChange}\n            value={this.state.base}>\n            {this._renderOptions()}\n          </select>\n        </span>\n        <Field\n          base={this.state.base}\n          onValueChange={this.props.onValueChange}\n          value={this.props.value}\n        />\n      </div>\n    );\n  }\n}\n","/**\n * Copyright 2003-present Greg Hurrell. All rights reserved.\n * Licensed under the terms of the MIT license.\n *\n * @flow\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class Label extends React.Component {\n  static propTypes = {\n    text: PropTypes.string.isRequired,\n  };\n\n  render() {\n    return (\n      <label className=\"hextrapolate-row\">\n        <span className=\"hextrapolate-base\">\n          {this.props.text}\n        </span>\n        {this.props.children}\n      </label>\n    );\n  }\n}\n","/**\n * Copyright 2003-present Greg Hurrell. All rights reserved.\n * Licensed under the terms of the MIT license.\n *\n * @flow\n */\n\nimport React from 'react';\nimport {ValuePropType} from './Field.react';\nimport convert from './convert';\n\nexport default class App extends React.Component {\n  static propTypes = {\n    value: ValuePropType,\n  };\n\n  render() {\n    const {value} = this.props;\n    const bits = value ? convert(value.value, value.base, 16).length * 8 : 0;\n    const bytes = bits / 8;\n    return (\n      <span>\n        {bytes} byte{bytes === 1 ? '' : 's'},\n        {' '}\n        {bits} bits\n      </span>\n    );\n  }\n}\n","/**\n * Copyright 2003-present Greg Hurrell. All rights reserved.\n * Licensed under the terms of the MIT license.\n *\n * @flow\n */\n\nimport DIGITS from './DIGITS';\nimport DynamicField from './DynamicField.react';\nimport Field from './Field.react';\nimport Label from './Label.react';\nimport React from 'react';\nimport Size from './Size.react';\nimport type Value from './Field.react';\nimport convert from './convert';\nimport debounce from 'simple-debounce';\n\nimport './App.css';\n\nconst SERIALIZATION_BASE = DIGITS.length;\n\nconst replaceHistoryState = debounce(\n  value => window.history.replaceState(\n    {},\n    '',\n    '#' + convert(value.value, value.base, SERIALIZATION_BASE)\n  ),\n  500\n);\n\nfunction getInitialValue() {\n  // Extract value from URL fragment, if present.\n  const value = window.location.hash.replace(/^#/, '');\n  const validator = new RegExp(`^[${DIGITS}]+$`);\n  if (!validator.test(value)) {\n    return null;\n  } else {\n    return {\n      base: SERIALIZATION_BASE,\n      value,\n    };\n  }\n}\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: getInitialValue(),\n    };\n  }\n\n  _onValueChange = (value: Value) => {\n    this.setState({value});\n    replaceHistoryState(value);\n  }\n\n  componentDidMount() {\n    this._firstInput.focus();\n  }\n\n  render() {\n    const {value} = this.state;\n\n    return (\n      <div className=\"hextrapolate\">\n        <h1>\n          Hextrapolate &mdash; <Size value={value} />\n        </h1>\n        <Label text=\"Hexadecimal\">\n          <Field\n            base={16}\n            onValueChange={this._onValueChange}\n            ref={ref => this._firstInput = ref}\n            value={value}\n          />\n        </Label>\n        <Label text=\"Decimal\">\n          <Field\n            onValueChange={this._onValueChange}\n            value={value}\n          />\n        </Label>\n        <Label text=\"Octal\">\n          <Field\n            base={8}\n            onValueChange={this._onValueChange}\n            value={value}\n          />\n        </Label>\n        <Label text=\"Binary\">\n          <Field\n            base={2}\n            onValueChange={this._onValueChange}\n            value={value}\n          />\n        </Label>\n        <DynamicField\n          initialBase={32}\n          value={value}\n          onValueChange={this._onValueChange}\n        />\n        <DynamicField\n          initialBase={36}\n          value={value}\n          onValueChange={this._onValueChange}\n        />\n        <footer className=\"hextrapolate-footer\">\n          <a href=\"mailto:greg@hurrell.net\">Contact</a>\n          {' | '}\n          <a href=\"https://github.com/wincent/hextrapolate\">Source</a>\n        </footer>\n      </div>\n    );\n  }\n}\n","/**\n * Copyright 2003-present Greg Hurrell. All rights reserved.\n * Licensed under the terms of the MIT license.\n *\n * @flow\n */\n\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}